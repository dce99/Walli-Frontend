/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export type UserOperationStruct = {
  sender: AddressLike;
  nonce: BigNumberish;
  initCode: BytesLike;
  callData: BytesLike;
  callGasLimit: BigNumberish;
  verificationGasLimit: BigNumberish;
  preVerificationGas: BigNumberish;
  maxFeePerGas: BigNumberish;
  maxPriorityFeePerGas: BigNumberish;
  paymasterAndData: BytesLike;
  signature: BytesLike;
};

export type UserOperationStructOutput = [
  sender: string,
  nonce: bigint,
  initCode: string,
  callData: string,
  callGasLimit: bigint,
  verificationGasLimit: bigint,
  preVerificationGas: bigint,
  maxFeePerGas: bigint,
  maxPriorityFeePerGas: bigint,
  paymasterAndData: string,
  signature: string
] & {
  sender: string;
  nonce: bigint;
  initCode: string;
  callData: string;
  callGasLimit: bigint;
  verificationGasLimit: bigint;
  preVerificationGas: bigint;
  maxFeePerGas: bigint;
  maxPriorityFeePerGas: bigint;
  paymasterAndData: string;
  signature: string;
};

export declare namespace Walli {
  export type ProfileStruct = { addr: AddressLike; name: BytesLike };

  export type ProfileStructOutput = [addr: string, name: string] & {
    addr: string;
    name: string;
  };

  export type RequestConfigStruct = {
    profile: Walli.ProfileStruct;
    finaliseAfter: BigNumberish;
    selector: BytesLike;
  };

  export type RequestConfigStructOutput = [
    profile: Walli.ProfileStructOutput,
    finaliseAfter: bigint,
    selector: string
  ] & {
    profile: Walli.ProfileStructOutput;
    finaliseAfter: bigint;
    selector: string;
  };
}

export interface WalliInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "UPGRADE_INTERFACE_VERSION"
      | "addDeposit"
      | "addSession"
      | "addTrustedContact"
      | "cancel2FARemoval"
      | "cancelGuardianAddition"
      | "cancelGuardianRemoval"
      | "cancelRecovery"
      | "clearAllSessions"
      | "confirm2FARemoval"
      | "confirmRecovery"
      | "connext"
      | "enable2FA"
      | "execute"
      | "executeBatch"
      | "finalise2FARemoval"
      | "finaliseGuardianAddition"
      | "finaliseGuardianRemoval"
      | "finaliseRecovery"
      | "get2FARemoval"
      | "getDeposit"
      | "getEntryPoint"
      | "getGuardians"
      | "getLock"
      | "getNativeLimit"
      | "getNonce"
      | "getPendingGuardianAdditions"
      | "getPendingGuardianRemovals"
      | "getRecovery"
      | "getTokenLimit"
      | "getTrustedContacts"
      | "initialize"
      | "initiate2FARemoval"
      | "initiateGuardianAddition"
      | "initiateGuardianRemoval"
      | "initiateRecovery"
      | "is2FAEnabled"
      | "isGuardian"
      | "isTrustedContact"
      | "isValidSession"
      | "lock"
      | "owner"
      | "ownerName"
      | "proxiableUUID"
      | "removeTrustedContact"
      | "sendNative"
      | "sendToken"
      | "setNativeLimit"
      | "setOnwerName"
      | "setTokenLimit"
      | "unlock"
      | "upgradeToAndCall"
      | "validateUserOp"
      | "withdrawDepositTo"
      | "xReceive"
      | "xTransfer"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "DepositAdded"
      | "DepositWithdrawed"
      | "Execute"
      | "Initialized"
      | "Received"
      | "Transfer"
      | "Upgraded"
      | "XReceived"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "UPGRADE_INTERFACE_VERSION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addDeposit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addSession",
    values: [
      BytesLike,
      BytesLike,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addTrustedContact",
    values: [AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "cancel2FARemoval",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "cancelGuardianAddition",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelGuardianRemoval",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelRecovery",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "clearAllSessions",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "confirm2FARemoval",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "confirmRecovery",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "connext", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "enable2FA",
    values: [
      BytesLike,
      BigNumberish,
      BytesLike,
      BytesLike,
      BytesLike,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "execute",
    values: [
      AddressLike,
      BigNumberish,
      BytesLike,
      BytesLike,
      BigNumberish,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "executeBatch",
    values: [
      AddressLike[],
      BytesLike[],
      BytesLike,
      BigNumberish,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "finalise2FARemoval",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "finaliseGuardianAddition",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "finaliseGuardianRemoval",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "finaliseRecovery",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "get2FARemoval",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDeposit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getEntryPoint",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getGuardians",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getLock", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getNativeLimit",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getNonce", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getPendingGuardianAdditions",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPendingGuardianRemovals",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getRecovery",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getTokenLimit",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getTrustedContacts",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initiate2FARemoval",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initiateGuardianAddition",
    values: [AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initiateGuardianRemoval",
    values: [AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "initiateRecovery",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "is2FAEnabled",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "isGuardian",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedContact",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isValidSession",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "lock", values?: undefined): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(functionFragment: "ownerName", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "proxiableUUID",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeTrustedContact",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "sendNative",
    values: [
      AddressLike,
      BigNumberish,
      BytesLike,
      BigNumberish,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "sendToken",
    values: [
      AddressLike,
      AddressLike,
      BigNumberish,
      BytesLike,
      BigNumberish,
      BytesLike,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setNativeLimit",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setOnwerName",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setTokenLimit",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "unlock", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "upgradeToAndCall",
    values: [AddressLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "validateUserOp",
    values: [UserOperationStruct, BytesLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawDepositTo",
    values: [AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "xReceive",
    values: [
      BytesLike,
      BigNumberish,
      AddressLike,
      AddressLike,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "xTransfer",
    values: [
      AddressLike,
      BigNumberish,
      AddressLike,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BytesLike,
      BigNumberish,
      BytesLike,
      BytesLike
    ]
  ): string;

  decodeFunctionResult(
    functionFragment: "UPGRADE_INTERFACE_VERSION",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "addDeposit", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "addSession", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addTrustedContact",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancel2FARemoval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelGuardianAddition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelGuardianRemoval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelRecovery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "clearAllSessions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "confirm2FARemoval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "confirmRecovery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "connext", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "enable2FA", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "execute", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "executeBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finalise2FARemoval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finaliseGuardianAddition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finaliseGuardianRemoval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "finaliseRecovery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get2FARemoval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getDeposit", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getEntryPoint",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getGuardians",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getLock", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getNativeLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getNonce", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPendingGuardianAdditions",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getPendingGuardianRemovals",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRecovery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTokenLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTrustedContacts",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initiate2FARemoval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initiateGuardianAddition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initiateGuardianRemoval",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initiateRecovery",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "is2FAEnabled",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "isGuardian", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedContact",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isValidSession",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "lock", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "ownerName", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "proxiableUUID",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeTrustedContact",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "sendNative", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "sendToken", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setNativeLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setOnwerName",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setTokenLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "unlock", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "upgradeToAndCall",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "validateUserOp",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "withdrawDepositTo",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "xReceive", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "xTransfer", data: BytesLike): Result;
}

export namespace DepositAddedEvent {
  export type InputTuple = [_wallet: AddressLike, _amount: BigNumberish];
  export type OutputTuple = [_wallet: string, _amount: bigint];
  export interface OutputObject {
    _wallet: string;
    _amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace DepositWithdrawedEvent {
  export type InputTuple = [_wallet: AddressLike, _amount: BigNumberish];
  export type OutputTuple = [_wallet: string, _amount: bigint];
  export interface OutputObject {
    _wallet: string;
    _amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ExecuteEvent {
  export type InputTuple = [
    _wallet: AddressLike,
    _selector: string,
    _receiver: AddressLike,
    amount: BigNumberish,
    _callData: BytesLike
  ];
  export type OutputTuple = [
    _wallet: string,
    _selector: string,
    _receiver: string,
    amount: bigint,
    _callData: string
  ];
  export interface OutputObject {
    _wallet: string;
    _selector: string;
    _receiver: string;
    amount: bigint;
    _callData: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace ReceivedEvent {
  export type InputTuple = [
    _wallet: AddressLike,
    _sender: AddressLike,
    _amount: BigNumberish
  ];
  export type OutputTuple = [_wallet: string, _sender: string, _amount: bigint];
  export interface OutputObject {
    _wallet: string;
    _sender: string;
    _amount: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TransferEvent {
  export type InputTuple = [
    _wallet: AddressLike,
    _selector: string,
    _receiver: AddressLike,
    amount: BigNumberish,
    _token: AddressLike,
    _type: string
  ];
  export type OutputTuple = [
    _wallet: string,
    _selector: string,
    _receiver: string,
    amount: bigint,
    _token: string,
    _type: string
  ];
  export interface OutputObject {
    _wallet: string;
    _selector: string;
    _receiver: string;
    amount: bigint;
    _token: string;
    _type: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UpgradedEvent {
  export type InputTuple = [implementation: AddressLike];
  export type OutputTuple = [implementation: string];
  export interface OutputObject {
    implementation: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace XReceivedEvent {
  export type InputTuple = [
    _wallet: AddressLike,
    _transferId: BytesLike,
    _amount: BigNumberish,
    _asset: AddressLike,
    _originSender: AddressLike,
    _originDomain: BigNumberish,
    _callData: BytesLike
  ];
  export type OutputTuple = [
    _wallet: string,
    _transferId: string,
    _amount: bigint,
    _asset: string,
    _originSender: string,
    _originDomain: bigint,
    _callData: string
  ];
  export interface OutputObject {
    _wallet: string;
    _transferId: string;
    _amount: bigint;
    _asset: string;
    _originSender: string;
    _originDomain: bigint;
    _callData: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface Walli extends BaseContract {
  connect(runner?: ContractRunner | null): Walli;
  waitForDeployment(): Promise<this>;

  interface: WalliInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  UPGRADE_INTERFACE_VERSION: TypedContractMethod<[], [string], "view">;

  addDeposit: TypedContractMethod<[], [void], "payable">;

  addSession: TypedContractMethod<
    [
      _hashedEmail: BytesLike,
      _key: BytesLike,
      _expiry: BigNumberish,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  addTrustedContact: TypedContractMethod<
    [_contact: AddressLike, _name: BytesLike],
    [void],
    "nonpayable"
  >;

  cancel2FARemoval: TypedContractMethod<[], [void], "nonpayable">;

  cancelGuardianAddition: TypedContractMethod<
    [_guardian: AddressLike],
    [void],
    "nonpayable"
  >;

  cancelGuardianRemoval: TypedContractMethod<
    [_guardian: AddressLike],
    [void],
    "nonpayable"
  >;

  cancelRecovery: TypedContractMethod<[], [void], "nonpayable">;

  clearAllSessions: TypedContractMethod<[], [void], "nonpayable">;

  confirm2FARemoval: TypedContractMethod<[], [void], "nonpayable">;

  confirmRecovery: TypedContractMethod<[], [void], "nonpayable">;

  connext: TypedContractMethod<[], [string], "view">;

  enable2FA: TypedContractMethod<
    [
      _hashedEmail: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike,
      _key: BytesLike,
      _expiry: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  execute: TypedContractMethod<
    [
      _dest: AddressLike,
      _value: BigNumberish,
      _func: BytesLike,
      _key: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  executeBatch: TypedContractMethod<
    [
      _dest: AddressLike[],
      _func: BytesLike[],
      _key: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  finalise2FARemoval: TypedContractMethod<[], [void], "nonpayable">;

  finaliseGuardianAddition: TypedContractMethod<
    [_guardian: AddressLike],
    [void],
    "nonpayable"
  >;

  finaliseGuardianRemoval: TypedContractMethod<
    [_guardian: AddressLike],
    [void],
    "nonpayable"
  >;

  finaliseRecovery: TypedContractMethod<[], [void], "nonpayable">;

  get2FARemoval: TypedContractMethod<
    [],
    [
      [bigint, bigint, bigint, bigint] & {
        _finaliseAfter: bigint;
        _guardianCount: bigint;
        _confirmedCount: bigint;
        _cancelledCount: bigint;
      }
    ],
    "view"
  >;

  getDeposit: TypedContractMethod<[], [string], "nonpayable">;

  getEntryPoint: TypedContractMethod<[], [string], "view">;

  getGuardians: TypedContractMethod<
    [],
    [
      [Walli.ProfileStructOutput[], bigint] & {
        _authorisedGuardians: Walli.ProfileStructOutput[];
        _currentCount: bigint;
      }
    ],
    "view"
  >;

  getLock: TypedContractMethod<[], [bigint], "view">;

  getNativeLimit: TypedContractMethod<[], [bigint], "view">;

  getNonce: TypedContractMethod<[], [bigint], "view">;

  getPendingGuardianAdditions: TypedContractMethod<
    [],
    [
      [Walli.RequestConfigStructOutput[], bigint] & {
        _pending: Walli.RequestConfigStructOutput[];
        _currentCount: bigint;
      }
    ],
    "view"
  >;

  getPendingGuardianRemovals: TypedContractMethod<
    [],
    [
      [Walli.RequestConfigStructOutput[], bigint] & {
        _pending: Walli.RequestConfigStructOutput[];
        _currentCount: bigint;
      }
    ],
    "view"
  >;

  getRecovery: TypedContractMethod<
    [],
    [
      [string, bigint, bigint, bigint, bigint] & {
        _recoveryOwner: string;
        _finaliseAfter: bigint;
        _guardianCount: bigint;
        _confirmedCount: bigint;
        _cancelledCount: bigint;
      }
    ],
    "view"
  >;

  getTokenLimit: TypedContractMethod<[_token: AddressLike], [bigint], "view">;

  getTrustedContacts: TypedContractMethod<
    [start: BigNumberish],
    [
      [Walli.ProfileStructOutput[], bigint] & {
        _trustedContacts: Walli.ProfileStructOutput[];
        _currentCount: bigint;
      }
    ],
    "view"
  >;

  initialize: TypedContractMethod<[_owner: AddressLike], [void], "nonpayable">;

  initiate2FARemoval: TypedContractMethod<[], [void], "nonpayable">;

  initiateGuardianAddition: TypedContractMethod<
    [_guardian: AddressLike, _name: BytesLike],
    [void],
    "nonpayable"
  >;

  initiateGuardianRemoval: TypedContractMethod<
    [_guardian: AddressLike, _name: BytesLike],
    [void],
    "nonpayable"
  >;

  initiateRecovery: TypedContractMethod<
    [_recoveryOwner: AddressLike],
    [void],
    "nonpayable"
  >;

  is2FAEnabled: TypedContractMethod<[], [boolean], "view">;

  isGuardian: TypedContractMethod<[_guardian: AddressLike], [boolean], "view">;

  isTrustedContact: TypedContractMethod<
    [_contact: AddressLike],
    [boolean],
    "view"
  >;

  isValidSession: TypedContractMethod<[_key: BytesLike], [boolean], "view">;

  lock: TypedContractMethod<[], [void], "nonpayable">;

  owner: TypedContractMethod<[], [string], "view">;

  ownerName: TypedContractMethod<[], [string], "view">;

  proxiableUUID: TypedContractMethod<[], [string], "view">;

  removeTrustedContact: TypedContractMethod<
    [_contact: AddressLike],
    [void],
    "nonpayable"
  >;

  sendNative: TypedContractMethod<
    [
      _to: AddressLike,
      _amount: BigNumberish,
      _key: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  sendToken: TypedContractMethod<
    [
      _token: AddressLike,
      _to: AddressLike,
      _amount: BigNumberish,
      _key: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  setNativeLimit: TypedContractMethod<
    [_limit: BigNumberish],
    [void],
    "nonpayable"
  >;

  setOnwerName: TypedContractMethod<
    [_ownerName: BytesLike],
    [void],
    "nonpayable"
  >;

  setTokenLimit: TypedContractMethod<
    [_token: AddressLike, _limit: BigNumberish],
    [void],
    "nonpayable"
  >;

  unlock: TypedContractMethod<[], [void], "nonpayable">;

  upgradeToAndCall: TypedContractMethod<
    [newImplementation: AddressLike, data: BytesLike],
    [void],
    "payable"
  >;

  validateUserOp: TypedContractMethod<
    [
      userOp: UserOperationStruct,
      userOpHash: BytesLike,
      missingAccountFunds: BigNumberish
    ],
    [bigint],
    "nonpayable"
  >;

  withdrawDepositTo: TypedContractMethod<
    [_withdrawAddress: AddressLike, _amount: BigNumberish],
    [void],
    "nonpayable"
  >;

  xReceive: TypedContractMethod<
    [
      _transferId: BytesLike,
      _amount: BigNumberish,
      _asset: AddressLike,
      _originSender: AddressLike,
      _originDomain: BigNumberish,
      _callData: BytesLike
    ],
    [string],
    "nonpayable"
  >;

  xTransfer: TypedContractMethod<
    [
      _tokenAddress: AddressLike,
      _amount: BigNumberish,
      _recipient: AddressLike,
      _destinationDomain: BigNumberish,
      _slippage: BigNumberish,
      _relayerFee: BigNumberish,
      _key: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "payable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "UPGRADE_INTERFACE_VERSION"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "addDeposit"
  ): TypedContractMethod<[], [void], "payable">;
  getFunction(
    nameOrSignature: "addSession"
  ): TypedContractMethod<
    [
      _hashedEmail: BytesLike,
      _key: BytesLike,
      _expiry: BigNumberish,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "addTrustedContact"
  ): TypedContractMethod<
    [_contact: AddressLike, _name: BytesLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "cancel2FARemoval"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "cancelGuardianAddition"
  ): TypedContractMethod<[_guardian: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "cancelGuardianRemoval"
  ): TypedContractMethod<[_guardian: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "cancelRecovery"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "clearAllSessions"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "confirm2FARemoval"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "confirmRecovery"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "connext"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "enable2FA"
  ): TypedContractMethod<
    [
      _hashedEmail: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike,
      _key: BytesLike,
      _expiry: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "execute"
  ): TypedContractMethod<
    [
      _dest: AddressLike,
      _value: BigNumberish,
      _func: BytesLike,
      _key: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "executeBatch"
  ): TypedContractMethod<
    [
      _dest: AddressLike[],
      _func: BytesLike[],
      _key: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "finalise2FARemoval"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "finaliseGuardianAddition"
  ): TypedContractMethod<[_guardian: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "finaliseGuardianRemoval"
  ): TypedContractMethod<[_guardian: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "finaliseRecovery"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "get2FARemoval"
  ): TypedContractMethod<
    [],
    [
      [bigint, bigint, bigint, bigint] & {
        _finaliseAfter: bigint;
        _guardianCount: bigint;
        _confirmedCount: bigint;
        _cancelledCount: bigint;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "getDeposit"
  ): TypedContractMethod<[], [string], "nonpayable">;
  getFunction(
    nameOrSignature: "getEntryPoint"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "getGuardians"
  ): TypedContractMethod<
    [],
    [
      [Walli.ProfileStructOutput[], bigint] & {
        _authorisedGuardians: Walli.ProfileStructOutput[];
        _currentCount: bigint;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "getLock"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getNativeLimit"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getNonce"
  ): TypedContractMethod<[], [bigint], "view">;
  getFunction(
    nameOrSignature: "getPendingGuardianAdditions"
  ): TypedContractMethod<
    [],
    [
      [Walli.RequestConfigStructOutput[], bigint] & {
        _pending: Walli.RequestConfigStructOutput[];
        _currentCount: bigint;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "getPendingGuardianRemovals"
  ): TypedContractMethod<
    [],
    [
      [Walli.RequestConfigStructOutput[], bigint] & {
        _pending: Walli.RequestConfigStructOutput[];
        _currentCount: bigint;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "getRecovery"
  ): TypedContractMethod<
    [],
    [
      [string, bigint, bigint, bigint, bigint] & {
        _recoveryOwner: string;
        _finaliseAfter: bigint;
        _guardianCount: bigint;
        _confirmedCount: bigint;
        _cancelledCount: bigint;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "getTokenLimit"
  ): TypedContractMethod<[_token: AddressLike], [bigint], "view">;
  getFunction(
    nameOrSignature: "getTrustedContacts"
  ): TypedContractMethod<
    [start: BigNumberish],
    [
      [Walli.ProfileStructOutput[], bigint] & {
        _trustedContacts: Walli.ProfileStructOutput[];
        _currentCount: bigint;
      }
    ],
    "view"
  >;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<[_owner: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "initiate2FARemoval"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "initiateGuardianAddition"
  ): TypedContractMethod<
    [_guardian: AddressLike, _name: BytesLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "initiateGuardianRemoval"
  ): TypedContractMethod<
    [_guardian: AddressLike, _name: BytesLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "initiateRecovery"
  ): TypedContractMethod<[_recoveryOwner: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "is2FAEnabled"
  ): TypedContractMethod<[], [boolean], "view">;
  getFunction(
    nameOrSignature: "isGuardian"
  ): TypedContractMethod<[_guardian: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isTrustedContact"
  ): TypedContractMethod<[_contact: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "isValidSession"
  ): TypedContractMethod<[_key: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "lock"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "owner"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "ownerName"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "proxiableUUID"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "removeTrustedContact"
  ): TypedContractMethod<[_contact: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "sendNative"
  ): TypedContractMethod<
    [
      _to: AddressLike,
      _amount: BigNumberish,
      _key: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "sendToken"
  ): TypedContractMethod<
    [
      _token: AddressLike,
      _to: AddressLike,
      _amount: BigNumberish,
      _key: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setNativeLimit"
  ): TypedContractMethod<[_limit: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setOnwerName"
  ): TypedContractMethod<[_ownerName: BytesLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "setTokenLimit"
  ): TypedContractMethod<
    [_token: AddressLike, _limit: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "unlock"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "upgradeToAndCall"
  ): TypedContractMethod<
    [newImplementation: AddressLike, data: BytesLike],
    [void],
    "payable"
  >;
  getFunction(
    nameOrSignature: "validateUserOp"
  ): TypedContractMethod<
    [
      userOp: UserOperationStruct,
      userOpHash: BytesLike,
      missingAccountFunds: BigNumberish
    ],
    [bigint],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "withdrawDepositTo"
  ): TypedContractMethod<
    [_withdrawAddress: AddressLike, _amount: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "xReceive"
  ): TypedContractMethod<
    [
      _transferId: BytesLike,
      _amount: BigNumberish,
      _asset: AddressLike,
      _originSender: AddressLike,
      _originDomain: BigNumberish,
      _callData: BytesLike
    ],
    [string],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "xTransfer"
  ): TypedContractMethod<
    [
      _tokenAddress: AddressLike,
      _amount: BigNumberish,
      _recipient: AddressLike,
      _destinationDomain: BigNumberish,
      _slippage: BigNumberish,
      _relayerFee: BigNumberish,
      _key: BytesLike,
      _chainId: BigNumberish,
      _messageHash: BytesLike,
      _signatures: BytesLike
    ],
    [void],
    "payable"
  >;

  getEvent(
    key: "DepositAdded"
  ): TypedContractEvent<
    DepositAddedEvent.InputTuple,
    DepositAddedEvent.OutputTuple,
    DepositAddedEvent.OutputObject
  >;
  getEvent(
    key: "DepositWithdrawed"
  ): TypedContractEvent<
    DepositWithdrawedEvent.InputTuple,
    DepositWithdrawedEvent.OutputTuple,
    DepositWithdrawedEvent.OutputObject
  >;
  getEvent(
    key: "Execute"
  ): TypedContractEvent<
    ExecuteEvent.InputTuple,
    ExecuteEvent.OutputTuple,
    ExecuteEvent.OutputObject
  >;
  getEvent(
    key: "Initialized"
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;
  getEvent(
    key: "Received"
  ): TypedContractEvent<
    ReceivedEvent.InputTuple,
    ReceivedEvent.OutputTuple,
    ReceivedEvent.OutputObject
  >;
  getEvent(
    key: "Transfer"
  ): TypedContractEvent<
    TransferEvent.InputTuple,
    TransferEvent.OutputTuple,
    TransferEvent.OutputObject
  >;
  getEvent(
    key: "Upgraded"
  ): TypedContractEvent<
    UpgradedEvent.InputTuple,
    UpgradedEvent.OutputTuple,
    UpgradedEvent.OutputObject
  >;
  getEvent(
    key: "XReceived"
  ): TypedContractEvent<
    XReceivedEvent.InputTuple,
    XReceivedEvent.OutputTuple,
    XReceivedEvent.OutputObject
  >;

  filters: {
    "DepositAdded(address,uint256)": TypedContractEvent<
      DepositAddedEvent.InputTuple,
      DepositAddedEvent.OutputTuple,
      DepositAddedEvent.OutputObject
    >;
    DepositAdded: TypedContractEvent<
      DepositAddedEvent.InputTuple,
      DepositAddedEvent.OutputTuple,
      DepositAddedEvent.OutputObject
    >;

    "DepositWithdrawed(address,uint256)": TypedContractEvent<
      DepositWithdrawedEvent.InputTuple,
      DepositWithdrawedEvent.OutputTuple,
      DepositWithdrawedEvent.OutputObject
    >;
    DepositWithdrawed: TypedContractEvent<
      DepositWithdrawedEvent.InputTuple,
      DepositWithdrawedEvent.OutputTuple,
      DepositWithdrawedEvent.OutputObject
    >;

    "Execute(address,string,address,uint256,bytes)": TypedContractEvent<
      ExecuteEvent.InputTuple,
      ExecuteEvent.OutputTuple,
      ExecuteEvent.OutputObject
    >;
    Execute: TypedContractEvent<
      ExecuteEvent.InputTuple,
      ExecuteEvent.OutputTuple,
      ExecuteEvent.OutputObject
    >;

    "Initialized(uint64)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;

    "Received(address,address,uint256)": TypedContractEvent<
      ReceivedEvent.InputTuple,
      ReceivedEvent.OutputTuple,
      ReceivedEvent.OutputObject
    >;
    Received: TypedContractEvent<
      ReceivedEvent.InputTuple,
      ReceivedEvent.OutputTuple,
      ReceivedEvent.OutputObject
    >;

    "Transfer(address,string,address,uint256,address,string)": TypedContractEvent<
      TransferEvent.InputTuple,
      TransferEvent.OutputTuple,
      TransferEvent.OutputObject
    >;
    Transfer: TypedContractEvent<
      TransferEvent.InputTuple,
      TransferEvent.OutputTuple,
      TransferEvent.OutputObject
    >;

    "Upgraded(address)": TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;
    Upgraded: TypedContractEvent<
      UpgradedEvent.InputTuple,
      UpgradedEvent.OutputTuple,
      UpgradedEvent.OutputObject
    >;

    "XReceived(address,bytes32,uint256,address,address,uint32,bytes)": TypedContractEvent<
      XReceivedEvent.InputTuple,
      XReceivedEvent.OutputTuple,
      XReceivedEvent.OutputObject
    >;
    XReceived: TypedContractEvent<
      XReceivedEvent.InputTuple,
      XReceivedEvent.OutputTuple,
      XReceivedEvent.OutputObject
    >;
  };
}
